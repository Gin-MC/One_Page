<section id="sobremi" class="py-20 min-h-screen flex items-center">
  <div class="max-w-7xl mx-auto px-4 w-full grid grid-cols-1 lg:grid-cols-2 gap-10 items-center">

    <!-- Texto -->
    <div class="z-10" data-aos="zoom-in" data-aos-duration="3000">
      <h2 class="text-3xl sm:text-4xl lg:text-5xl xl:text-6xl font-bold mb-6 text-teal-400">Sobre mí</h2>
      <p class="max-w-xl text-base sm:text-lg lg:text-xl xl:text-2xl mb-6 text-white">
        Soy un desarrollador apasionado por crear soluciones web modernas. Disfruto el diseño elegante, el código limpio y las experiencias impactantes.
      </p>
      <h3 class="text-2xl sm:text-3xl lg:text-4xl xl:text-5xl font-bold mb-4 text-teal-400">Tecnologías que manejo</h3>
      <p class="text-base sm:text-lg lg:text-xl xl:text-2xl mb-6 text-white">He trabajado con una variedad de tecnologías, como:</p>

      <ul class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4">
        <!-- Lista de tecnologías -->
        <li class="flex items-center gap-2 bg-gray-200 text-gray-950 p-2 rounded shadow-md hover:bg-teal-100 hover:shadow-teal-300 transition-all duration-300 text-sm sm:text-base font-medium">
          <img src="/tecnologias/javascript.svg" alt="JavaScript" loading="lazy" class="w-6 h-6 sm:w-8 sm:h-8" />
          <span>JavaScript</span>
        </li>
        <li class="flex items-center gap-2 bg-gray-200 text-gray-950 p-2 rounded shadow-md hover:bg-teal-100 hover:shadow-teal-300 transition-all duration-300 text-sm sm:text-base font-medium">
          <img src="/tecnologias/nodejs.svg" alt="Node.js" loading="lazy" class="w-6 h-6 sm:w-8 sm:h-8" />
          <span>Node.js</span>
        </li>
        <li class="flex items-center gap-2 bg-gray-200 text-gray-950 p-2 rounded shadow-md hover:bg-teal-100 hover:shadow-teal-300 transition-all duration-300 text-sm sm:text-base font-medium">
          <img src="/tecnologias/viento-de-cola.svg" alt="Tailwind CSS" loading="lazy" class="w-6 h-6 sm:w-8 sm:h-8" />
          <span>Tailwind</span>
        </li>
        <li class="flex items-center gap-2 bg-gray-200 text-gray-950 p-2 rounded shadow-md hover:bg-teal-100 hover:shadow-teal-300 transition-all duration-300 text-sm sm:text-base font-medium">
          <img src="/tecnologias/postgresql.svg" alt="PostgreSQL" loading="lazy" class="w-6 h-6 sm:w-8 sm:h-8" />
          <span>PostgreSQL</span>
        </li>
        <li class="flex items-center gap-2 bg-gray-200 text-gray-950 p-2 rounded shadow-md hover:bg-teal-100 hover:shadow-teal-300 transition-all duration-300 text-sm sm:text-base font-medium">
          <img src="/tecnologias/c.svg" alt="JavaScript" loading="lazy" class="w-6 h-6 sm:w-8 sm:h-8" />
          <span>C++</span>
        </li>
        <li class="flex items-center gap-2 bg-gray-200 text-gray-950 p-2 rounded shadow-md hover:bg-teal-100 hover:shadow-teal-300 transition-all duration-300 text-sm sm:text-base font-medium">
          <img src="/tecnologias/astro.svg" alt="Node.js" loading="lazy" class="w-6 h-6 sm:w-8 sm:h-8" />
          <span>Astro</span>
        </li>
        <li class="flex items-center gap-2 bg-gray-200 text-gray-950 p-2 rounded shadow-md hover:bg-teal-100 hover:shadow-teal-300 transition-all duration-300 text-sm sm:text-base font-medium">
          <img src="/tecnologias/html.svg" alt="Tailwind CSS" loading="lazy" class="w-6 h-6 sm:w-8 sm:h-8" />
          <span>HTML</span>
        </li>
        <li class="flex items-center gap-2 bg-gray-200 text-gray-950 p-2 rounded shadow-md hover:bg-teal-100 hover:shadow-teal-300 transition-all duration-300 text-sm sm:text-base font-medium">
          <img src="/tecnologias/css.svg" alt="PostgreSQL" loading="lazy" class="w-6 h-6 sm:w-8 sm:h-8" />
          <span>CSS</span>
        </li>
        <li class="flex items-center gap-2 bg-gray-200 text-gray-950 p-2 rounded shadow-md hover:bg-teal-100 hover:shadow-teal-300 transition-all duration-300 text-sm sm:text-base font-medium">
          <img src="/tecnologias/git.svg" alt="JavaScript" loading="lazy" class="w-6 h-6 sm:w-8 sm:h-8" />
          <span>Git</span>
        </li>
        <li class="flex items-center gap-2 bg-gray-200 text-gray-950 p-2 rounded shadow-md hover:bg-teal-100 hover:shadow-teal-300 transition-all duration-300 text-sm sm:text-base font-medium">
          <img src="/tecnologias/github.svg" alt="Node.js" loading="lazy" class="w-6 h-6 sm:w-8 sm:h-8" />
          <span>GitHub</span>
        </li>
        <li class="flex items-center gap-2 bg-gray-200 text-gray-950 p-2 rounded shadow-md hover:bg-teal-100 hover:shadow-teal-300 transition-all duration-300 text-sm sm:text-base font-medium">
          <img src="/tecnologias/sql.png" alt="Tailwind CSS" loading="lazy" class="w-6 h-6 sm:w-8 sm:h-8" />
          <span>SQL server</span>
        </li>
        <li class="flex items-center gap-2 bg-gray-200 text-gray-950 p-2 rounded shadow-md hover:bg-teal-100 hover:shadow-teal-300 transition-all duration-300 text-sm sm:text-base font-medium">
          <img src="/tecnologias/bootstrap.svg" alt="PostgreSQL" loading="lazy" class="w-6 h-6 sm:w-8 sm:h-8" />
          <span>Bootstrap</span>
        </li>          
      </ul>
    </div>

    <!-- Canvas 3D -->
    <div class="w-full h-[250px] sm:h-[400px] md:h-[650px] relative z-0" data-aos="zoom-in" data-aos-duration="3000">
      <div id="three-container" class="w-full h-full"></div>
    </div>

  </div>
</section>

  <!-- Script Three.js -->
  <script type="module">
    import * as THREE from 'https://cdn.skypack.dev/three@0.150.1';

    const container = document.getElementById('three-container');

    const scene = new THREE.Scene();// escena 3D donde se renderizarán los objetos
    const camera = new THREE.PerspectiveCamera(
      75,// campo de visión de la cámara 75 grados
      container.clientWidth / container.clientHeight,
      0.1,
      1000
    );
    camera.position.z = 300; //se aleja la cámara

    const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });
    renderer.setSize(container.clientWidth, container.clientHeight);//tamaño del canva = tamaño del contenedor
    renderer.setPixelRatio(window.devicePixelRatio);// relación de píxeles del dispositivo para una mejor calidad
    container.appendChild(renderer.domElement);// se agrega el canvas al contenedor (DOM)

    const logoGroup = new THREE.Group();
    scene.add(logoGroup);// se agrega el grupo a la escena

    const logoPaths = [
      'astro.svg', 'css.svg', 'c.svg', 'html.svg', 'javascript.svg', 'git.svg', 'github.svg',
      'nodejs.svg', 'postgresql.svg', 'sql.png', 'visual-studio-code.svg',
      'tailwindcss.svg', 'google.svg', 'ver-js.svg'
    ];

    const fullLogoPaths = [...logoPaths, ...logoPaths]; // duplicados para llenar el globo
    const radius = 150;// radio del globo donde se colocarán los logos
    const loader = new THREE.TextureLoader();// carga de texturas

    fullLogoPaths.forEach((fileName, i) => {
      loader.load(`/tecnologias/${fileName}`, (texture) => {
        const sprite = new THREE.Sprite(new THREE.SpriteMaterial({ map: texture, transparent: true, opacity: 0.85 }));
        const phi = Math.acos(-1 + (2 * i) / fullLogoPaths.length); // angulo vertical
        const theta = Math.sqrt(fullLogoPaths.length * Math.PI) * phi; // angulo horizontal
        sprite.position.setFromSpherical(new THREE.Spherical(radius, phi, theta));
        sprite.scale.set(40, 40, 1);
        logoGroup.add(sprite);
      });
    });

    const animate = () => {
      requestAnimationFrame(animate);
      logoGroup.rotation.y += 0.0035;
      renderer.render(scene, camera);
    };

    animate();

    window.addEventListener('resize', () => {
      const { clientWidth, clientHeight } = container;
      camera.aspect = clientWidth / clientHeight;
      camera.updateProjectionMatrix();
      renderer.setSize(clientWidth, clientHeight);
    });
  </script>
